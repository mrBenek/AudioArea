@using Packt.Shared;
@using AudioArea.Mvc.Components;
@model HomeProductsViewModel;

@{
}

<div class="container-xxl px-2">
    <div class="row mx-3 gx-3 d-flex">
        <div class="col-xl-3">
            <div class="d-flex justify-content-between">
                <p class="mt-1 fs-4">Filters</p>
                <button type="button" class="float-end btn">Clear filters</button>
            </div>
            <div class="dropdown">
                <a data-bs-toggle="collapse" href="#company-collapse" class="btn form-control btn-rotate" aria-expanded="true">
                    Company
                    <div class="fa fa-chevron-up chevron-rotate m-1"></div>
                </a>
                <div class="collapse show" id="company-collapse">
                    @await Component.InvokeAsync(typeof(CompanyFilterViewComponent))
                </div>
            </div>
            <form asp-controller="Home" asp-action="GetProducts" method="post">
                <div class="dropdown">
                    <a data-bs-toggle="collapse" href="#category-collapse" class="btn form-control btn-rotate" aria-expanded="true">
                        Category
                        <div class="fa fa-chevron-up chevron-rotate m-1"></div>
                    </a>
                    <div class="collapse show" id="category-collapse">
                        @await Component.InvokeAsync(typeof(CategoryFilterViewComponent))
                    </div>
                </div>
                <div class="d-grid">
                    <a class="btn bg-success btn-apply-filters" id="btn-apply-filters">Apply filters</a>
                </div>
            </form>
        </div>
        <div class="col-xl-9">
            <div class="jumbotron p-md-2 rounded jumbotron-default">
                <p class="float-end mt-1 fs-5">10</p>
                <p class="float-end px-2 mt-2">out of</p>
                <input value="2" type="text" maxlength="2" id="PageNumber" class="form-control form-control-sm float-end bg-light text-center fs-5" style="width: 5%" />
                <div class="float-end px-2 rounded" style="width: 15%">
                    <select id="SortedBy" class="form-select float-end px-2 rounded border-dark">
                        <option selected>Name</option>
                        <option>Company</option>
                    </select>
                </div>
                <div class="float-end px-2 rounded" style="width: 10%">
                    <select id="ItemsPerPage" class="form-select float-end px-2 rounded border-dark">
                        <option>20</option>
                        <option>40</option>
                        <option>60</option>
                        <option>80</option>
                        <option selected>100</option>
                        <option>All</option>
                    </select>
                </div>
                <div class="col-md-6 px-0">
                    <h1 class="display-4 font-italic">Title for selected filters and information info</h1>
                </div>
            </div>
            <div class="row mt-3" id="products">
                @await Component.InvokeAsync(typeof(ProductCardsViewComponent))
            </div>
            <nav class="p-3 d-flex justify-content-center" aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    @await Component.InvokeAsync(typeof(PageNavigationViewComponent))
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle checkbox change event
        $('input[type="checkbox"][name="company"]').on('change', function () {
            var selectedCompanyIds = GetSelectedItems("company");

            $.ajax({
                url: '@Url.Action("CompanyCheckedIds", "Products")',
                type: 'POST',
                dataType: 'html',
                data: {
                    companyIds: selectedCompanyIds
                },
                success: function (result) {
                    $('#category-collapse').html(result);
                },
                error: function () {
                    console.log('An error occurred while restrieving filtered category data.');
                }
            });
        });

        $('#btn-apply-filters').click(function () {
            var selectedCompanyIds = GetSelectedItems("company");
            var selectedCategoryIds = GetSelectedItems("category");

            $.ajax({
                url: '@Url.Action("GetItemsPerPage", "Products")',
                type: 'POST',
                dataType: 'html',
                data: {
                    companyIds: selectedCompanyIds,
                    categoryIds: selectedCategoryIds,
                    pageNumber: GetPageNumber(),
                    itemsPerPage: GetItemsPerPage(),
                    sortedBy: GetSortedBy(),
                },
                success: function (result) {
                    $('#products').html(result);
                },
                error: function () {
                    console.log('An error occurred while restrieving filtered category or company data.');
                }
            });
        });

        function GetSelectedItems(name) {
            return $('input[type="checkbox"][name="' + name + '"]:checked').map(function () {
                return $(this).val();
            }).get();
        }

        function GetPageNumber() {
            return $('#PageNumber').val();
        }

        function GetSortedBy() {
            return $('#SortedBy').val();
        }

        function GetItemsPerPage() {
            return $('#ItemsPerPage').val();
        }
    </script>
}